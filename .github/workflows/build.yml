name: Build Electron App
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      shell: bash
      
    - name: Install TypeScript globally
      run: npm install -g typescript
      
    - name: Create TypeScript config
      run: |
        echo '{
          "compilerOptions": {
            "target": "ES2020",
            "module": "commonjs",
            "sourceMap": true,
            "outDir": "../build/electron",
            "rootDir": "./",
            "strict": true,
            "moduleResolution": "node",
            "esModuleInterop": true,
            "skipLibCheck": true,
            "forceConsistentCasingInFileNames": true,
            "types": ["node"],
            "typeRoots": ["../node_modules/@types"],
            "baseUrl": "../",
            "paths": {
              "@shared/*": ["shared/*"],
              "@electron/*": ["electron/*"]
            }
          },
          "include": [
            "./**/*",
            "../shared/**/*"
          ],
          "exclude": ["node_modules"]
        }' > electron/tsconfig.json
      shell: bash
        
    - name: Build TypeScript
      run: npm run build:electron
        
    - name: Build React app
      run: npm run build
      env:
        CI: false
        
    - name: Build Electron app
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          npm run electron:build:win
        else
          npm run electron:build:mac
        fi
      shell: bash
      env:
        CI: false
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: dist/*.exe
        
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: |
          dist/*.dmg
          dist/mac-universal/*.dmg
    - name: Clean up artifacts
      run: |
        rm -rf dist
        rm -rf build
      shell: bash
